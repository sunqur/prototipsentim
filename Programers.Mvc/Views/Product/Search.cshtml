@using System.Text.RegularExpressions
@model Programers.Mvc.Models.ProductSearchViewModel
@{
    ViewBag.Title = "Arama Sonuçları";
    Layout = "_Layout";
    Regex regex = new Regex("<[^>]*>");
}
<div class="col-md-8">

    <h1 class="my-4">
        Arama Sonuçları
    </h1>
    <form>
        <div class="form-row">
            <input type="hidden" id="keyword" value="@Model.Keyword" />
            <input type="hidden" id="current-page" value="@Model.ProductListDto.CurrentPage" />
            <div class="form-group col-md-6">
                <select class="form-control" id="select-page-size">
                    <option selected="@(Model.ProductListDto.PageSize == 5 ? "selected" : null)" value="5">5</option>
                    <option selected="@(Model.ProductListDto.PageSize == 10 ? "selected" : null)" value="10">10</option>
                    <option selected="@(Model.ProductListDto.PageSize == 20 ? "selected" : null)" value="20">20</option>
                </select>
            </div>
            <div class="form-group col-md-6">
                <select class="form-control" id="select-is-ascending">
                    <option selected="@(Model.ProductListDto.IsAscending == false ? "selected" : null)" value="false">En Yeni</option>
                    <option selected="@(Model.ProductListDto.IsAscending ? "selected" : null)" value="true">En Eski</option>
                </select>
            </div>
        </div>
    </form>

    @foreach (var product in Model.ProductListDto.Products)
    {
        <!-- Blog Post -->
        <div class="card mb-4">
            <img class="card-img-top" src="~/img/@product.Thumbnail" alt="@product.Title">
            <div class="card-body">
                <h2 class="card-title">@product.Title;

#line default
#line hidden
#nullable disable
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext.Title</h2>
                <p class="card-text">
                    @{
                        product.Content = regex.Replace(product.Content, "");
                    }
                    @(product.Content.Length>250 ? product.Content.Substring(0,250) : product.Content)
                </p>
                <a asp-controller="Product" asp-action="Detail" asp-route-productId="@product.Id" class="btn btn-primary">Daha fazla oku &rarr;</a>
            </div>
            <div class="card-footer text-muted">
                @product.User.UserName tarafından @product.Date tarihinde paylaşıldı.
            </div>
        </div>
    }

    <!-- Pagination -->
    <ul class="pagination justify-content-center mb-4">
        @{
            @if (Model.ProductListDto.ShowPrevious)
            {
                <li class="page-item">
                        <a class="page-link" asp-route-currentPage="@(Model.ProductListDto.CurrentPage-1)" asp-route-isAscending="@Model.ProductListDto.IsAscending" asp-route-pageSize="@Model.ProductListDto.PageSize" asp-route-keyword="@Model.Keyword">Önceki</a>
                    </li>

            }
            @for (var i = 1; i <= Model.ProductListDto.TotalPages; i++)
            {
                <li class="page-item @(i == Model.ProductListDto.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-route-currentPage="@i" asp-route-isAscending="@Model.ProductListDto.IsAscending" asp-route-pageSize="@Model.ProductListDto.PageSize" asp-route-keyword="@Model.Keyword">@i</a>
                </li>
            }
            @if (Model.ProductListDto.ShowNext)
            {
                <li class="page-item">
                        <a class="page-link" asp-route-currentPage="@(Model.ProductListDto.CurrentPage+1)" asp-route-isAscending="@Model.ProductListDto.IsAscending" asp-route-pageSize="@Model.ProductListDto.PageSize" asp-route-keyword="@Model.Keyword">Sonraki</a>
                    </li>
            }
        }
    </ul>

</div>
    @section Scripts {
        <script>
            $(document).ready(function() {

                $(function() {

                    const selectPageSize = $('#select-page-size');
                    const selectIsAscending = $('#select-is-ascending');
                    const keyword = $('#keyword').val();
                    const currentPage = $('#current-page').val();
                    const keywordQuery = keyword !== null ? `&keyword=${keyword}` : null;

                    selectPageSize.on('change',
                        function() {
                            window.location =
                                `/?pageSize=${selectPageSize.val()}&isAscending=${selectIsAscending.val()}${keywordQuery != null ? keywordQuery : null}&currentPage=${currentPage}`;
                        });
                    selectIsAscending.on('change',
                        function() {
                            window.location =
                                `/?pageSize=${selectPageSize.val()}&isAscending=${selectIsAscending.val()}${keywordQuery != null ? keywordQuery : null}&currentPage=${currentPage}`;
                        });
                });
            });
        </script>
    }